{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\n  const {\n    data\n  } = await axios.get(\"/post/feed\");\n  return data;\n});\nexport const addPosts = createAsyncThunk(\"posts/addPosts\", async fields => {\n  const {\n    data\n  } = await axios.post(\"/post\", fields);\n  return data;\n});\nexport const fetchDeletePost = createAsyncThunk(\"posts/fetchDeletePost\", async id => {\n  axios.delete(`/post/${id}`);\n});\nconst initialState = {\n  posts: {\n    items: [],\n    status: \"loading\"\n  }\n};\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPosts.pending]: state => {\n      state.posts.items = [];\n      state.posts.status = \"loading\";\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.posts.items = action.payload;\n      state.posts.status = \"loaded\";\n    },\n    [fetchPosts.rejected]: state => {\n      state.posts.items = [];\n      state.posts.status = \"error\";\n    },\n    [addPosts.pending]: state => {\n      //state.posts.items = [];\n      state.posts.status = \"loading\";\n    },\n    [addPosts.fulfilled]: (state, action) => {\n      //state.posts.items.push(action.payload);\n      //console.log(action.payload);\n      //\n      state.posts.items.push(action.payload);\n      state.posts.status = \"loaded\";\n    },\n    [addPosts.rejected]: state => {\n      //state.posts.items = [];\n      state.posts.status = \"error\";\n    },\n    [fetchDeletePost.pending]: (state, action) => {\n      state.posts.items = state.posts.items.filter(obj => obj._id !== action.meta.arg);\n      //console.log(state.posts.items);\n    }\n  }\n});\n\nexport const postsReducer = postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchPosts","data","get","addPosts","fields","post","fetchDeletePost","id","delete","initialState","posts","items","status","postsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","push","filter","obj","_id","meta","arg","postsReducer","reducer"],"sources":["C:/test__react/MERN-Social-Media-App/client/src/redux/slices/posts.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\r\n  const { data } = await axios.get(\"/post/feed\");\r\n  return data;\r\n});\r\n\r\nexport const addPosts = createAsyncThunk(\"posts/addPosts\", async (fields) => {\r\n  const { data } = await axios.post(\"/post\", fields);\r\n  return data;\r\n});\r\n\r\nexport const fetchDeletePost = createAsyncThunk(\r\n  \"posts/fetchDeletePost\",\r\n  async (id) => {\r\n    axios.delete(`/post/${id}`);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  posts: {\r\n    items: [],\r\n    status: \"loading\",\r\n  },\r\n};\r\n\r\nconst postsSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchPosts.pending]: (state) => {\r\n      state.posts.items = [];\r\n      state.posts.status = \"loading\";\r\n    },\r\n    [fetchPosts.fulfilled]: (state, action) => {\r\n      state.posts.items = action.payload;\r\n      state.posts.status = \"loaded\";\r\n    },\r\n    [fetchPosts.rejected]: (state) => {\r\n      state.posts.items = [];\r\n      state.posts.status = \"error\";\r\n    },\r\n\r\n    [addPosts.pending]: (state) => {\r\n      //state.posts.items = [];\r\n      state.posts.status = \"loading\";\r\n    },\r\n    [addPosts.fulfilled]: (state, action) => {\r\n      //state.posts.items.push(action.payload);\r\n      //console.log(action.payload);\r\n      //\r\n      state.posts.items.push(action.payload);\r\n      state.posts.status = \"loaded\";\r\n    },\r\n    [addPosts.rejected]: (state) => {\r\n      //state.posts.items = [];\r\n      state.posts.status = \"error\";\r\n    },\r\n\r\n    [fetchDeletePost.pending]: (state, action) => {\r\n      state.posts.items = state.posts.items.filter(\r\n        (obj) => obj._id !== action.meta.arg\r\n      );\r\n      //console.log(state.posts.items);\r\n    },\r\n  },\r\n});\r\n\r\nexport const postsReducer = postsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,YAAY,CAAC;EAC9C,OAAOD,IAAI;AACb,CAAC,CAAC;AAEF,OAAO,MAAME,QAAQ,GAAGL,gBAAgB,CAAC,gBAAgB,EAAE,MAAOM,MAAM,IAAK;EAC3E,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACM,IAAI,CAAC,OAAO,EAAED,MAAM,CAAC;EAClD,OAAOH,IAAI;AACb,CAAC,CAAC;AAEF,OAAO,MAAMK,eAAe,GAAGR,gBAAgB,CAC7C,uBAAuB,EACvB,MAAOS,EAAE,IAAK;EACZR,KAAK,CAACS,MAAM,CAAE,SAAQD,EAAG,EAAC,CAAC;AAC7B,CAAC,CACF;AAED,MAAME,YAAY,GAAG;EACnBC,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV;AACF,CAAC;AAED,MAAMC,UAAU,GAAGhB,WAAW,CAAC;EAC7BiB,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACb,CAAChB,UAAU,CAACiB,OAAO,GAAIC,KAAK,IAAK;MAC/BA,KAAK,CAACR,KAAK,CAACC,KAAK,GAAG,EAAE;MACtBO,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,SAAS;IAChC,CAAC;IACD,CAACZ,UAAU,CAACmB,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAACR,KAAK,CAACC,KAAK,GAAGS,MAAM,CAACC,OAAO;MAClCH,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,QAAQ;IAC/B,CAAC;IACD,CAACZ,UAAU,CAACsB,QAAQ,GAAIJ,KAAK,IAAK;MAChCA,KAAK,CAACR,KAAK,CAACC,KAAK,GAAG,EAAE;MACtBO,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,OAAO;IAC9B,CAAC;IAED,CAACT,QAAQ,CAACc,OAAO,GAAIC,KAAK,IAAK;MAC7B;MACAA,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,SAAS;IAChC,CAAC;IACD,CAACT,QAAQ,CAACgB,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvC;MACA;MACA;MACAF,KAAK,CAACR,KAAK,CAACC,KAAK,CAACY,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;MACtCH,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,QAAQ;IAC/B,CAAC;IACD,CAACT,QAAQ,CAACmB,QAAQ,GAAIJ,KAAK,IAAK;MAC9B;MACAA,KAAK,CAACR,KAAK,CAACE,MAAM,GAAG,OAAO;IAC9B,CAAC;IAED,CAACN,eAAe,CAACW,OAAO,GAAG,CAACC,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAACR,KAAK,CAACC,KAAK,GAAGO,KAAK,CAACR,KAAK,CAACC,KAAK,CAACa,MAAM,CACzCC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKN,MAAM,CAACO,IAAI,CAACC,GAAG,CACrC;MACD;IACF;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,YAAY,GAAGhB,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}