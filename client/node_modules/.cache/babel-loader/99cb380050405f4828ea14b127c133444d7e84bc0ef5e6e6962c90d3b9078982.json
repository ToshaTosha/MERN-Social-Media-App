{"ast":null,"code":"var _jsxFileName = \"C:\\\\test__react\\\\MERN-Social-Media-App\\\\client\\\\src\\\\Components\\\\SubmitComment.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPosts } from \"../redux/slices/posts\";\nimport axios from \"../axios\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubmitComment() {\n  _s();\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\");\n  let postId = data._id;\n  let postData = data._id;\n  let userData = data.user._id;\n  const onSubmit = async () => {\n    try {\n      const fields = {\n        comment\n      };\n      const {\n        data\n      } = await axios.post(`/comment/posts/${postId}`, fields);\n      onClickSort(prevTasks => [data.data, ...prevTasks]);\n      setComment(\"\");\n    } catch (err) {\n      console.warn(err);\n      alert(\"Ошибка при загрузке файла\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    sx: {\n      width: \"100%\",\n      padding: \"10px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"user-avatar\",\n        src: \"https://www.vladtime.ru/uploads/posts/2018-03/1522438548_evropeyskaya-koshka-dikiy-kot.jpg\",\n        sx: {\n          width: 42,\n          height: 42\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439...\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        variant: \"standard\",\n        maxRows: 10,\n        multiline: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onSubmit,\n        size: \"small\",\n        variant: \"outlined\",\n        sx: {\n          padding: \"5px 20px\"\n        },\n        children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(SubmitComment, \"pHBJ9Nt6gAKVJ5LH/zrD8X29rHs=\", false, function () {\n  return [useDispatch];\n});\n_c = SubmitComment;\nvar _c;\n$RefreshReg$(_c, \"SubmitComment\");","map":{"version":3,"names":["useState","useDispatch","useSelector","addPosts","axios","TextField","Button","Stack","Avatar","IconButton","Paper","SubmitComment","dispatch","text","setText","postId","data","_id","postData","userData","user","onSubmit","fields","comment","post","onClickSort","prevTasks","setComment","err","console","warn","alert","width","padding","height","e","target","value"],"sources":["C:/test__react/MERN-Social-Media-App/client/src/Components/SubmitComment.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPosts } from \"../redux/slices/posts\";\r\nimport axios from \"../axios\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nexport default function SubmitComment() {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState(\"\");\r\n\r\n  let postId = data._id;\r\n  let postData = data._id;\r\n  let userData = data.user._id;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const fields = {\r\n        comment,\r\n      };\r\n      const { data } = await axios.post(`/comment/posts/${postId}`, fields);\r\n      onClickSort((prevTasks) => [data.data, ...prevTasks]);\r\n      setComment(\"\");\r\n    } catch (err) {\r\n      console.warn(err);\r\n      alert(\"Ошибка при загрузке файла\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={2} sx={{ width: \"100%\", padding: \"10px\" }}>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n        <Avatar\r\n          alt=\"user-avatar\"\r\n          src=\"https://www.vladtime.ru/uploads/posts/2018-03/1522438548_evropeyskaya-koshka-dikiy-kot.jpg\"\r\n          sx={{ width: 42, height: 42 }}\r\n        />\r\n        <TextField\r\n          label=\"Написать комментарий...\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          variant=\"standard\"\r\n          maxRows={10}\r\n          multiline\r\n          fullWidth\r\n        />\r\n        <Button\r\n          onClick={onSubmit}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          sx={{ padding: \"5px 20px\" }}\r\n        >\r\n          Опубликовать\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,UAAU;AAE5B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,eAAe,SAASC,aAAa,GAAG;EAAA;EACtC,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAIe,MAAM,GAAGC,IAAI,CAACC,GAAG;EACrB,IAAIC,QAAQ,GAAGF,IAAI,CAACC,GAAG;EACvB,IAAIE,QAAQ,GAAGH,IAAI,CAACI,IAAI,CAACH,GAAG;EAE5B,MAAMI,QAAQ,GAAG,YAAY;IAC3B,IAAI;MACF,MAAMC,MAAM,GAAG;QACbC;MACF,CAAC;MACD,MAAM;QAAEP;MAAK,CAAC,GAAG,MAAMZ,KAAK,CAACoB,IAAI,CAAE,kBAAiBT,MAAO,EAAC,EAAEO,MAAM,CAAC;MACrEG,WAAW,CAAEC,SAAS,IAAK,CAACV,IAAI,CAACA,IAAI,EAAE,GAAGU,SAAS,CAAC,CAAC;MACrDC,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC;MACjBG,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACE,QAAC,KAAK;IAAC,OAAO,EAAE,CAAE;IAAC,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAA,uBACxD,QAAC,KAAK;MAAC,SAAS,EAAC,KAAK;MAAC,UAAU,EAAC,QAAQ;MAAC,OAAO,EAAE,CAAE;MAAA,wBACpD,QAAC,MAAM;QACL,GAAG,EAAC,aAAa;QACjB,GAAG,EAAC,4FAA4F;QAChG,EAAE,EAAE;UAAED,KAAK,EAAE,EAAE;UAAEE,MAAM,EAAE;QAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9B,eACF,QAAC,SAAS;QACR,KAAK,EAAC,wHAAyB;QAC/B,KAAK,EAAErB,IAAK;QACZ,QAAQ,EAAGsB,CAAC,IAAKrB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACzC,OAAO,EAAC,UAAU;QAClB,OAAO,EAAE,EAAG;QACZ,SAAS;QACT,SAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACT,eACF,QAAC,MAAM;QACL,OAAO,EAAEhB,QAAS;QAClB,IAAI,EAAC,OAAO;QACZ,OAAO,EAAC,UAAU;QAClB,EAAE,EAAE;UAAEY,OAAO,EAAE;QAAW,CAAE;QAAA,UAC7B;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GAlDuBtB,aAAa;EAAA,QAClBV,WAAW;AAAA;AAAA,KADNU,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}